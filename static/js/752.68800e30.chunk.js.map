{"version":3,"file":"static/js/752.68800e30.chunk.js","mappings":"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","sources":["hooks/categoriesFilter.js","components/StatisticsDiagram/StatisticsDiagram.styled.js","components/StatisticsDiagram/StatisticsDiagram.jsx","components/StatisticsSelect/StatisticsSelect.styled.js","components/StatisticsSelect/StatisticsSelect.jsx","components/StatisticsTable/StatisticsTable.styled.js","components/StatisticsTable/StatisticsTable.jsx","components/Statistics/Statistics.styled.js","components/Statistics/Statistics.jsx","pages/SummaryPage.jsx"],"sourcesContent":["export const useCategoriesType = value => {\n    const expenseCategories = value.filter(\n      category => category.type === 'EXPENSE'\n    );\n    const incomeCategories = value.filter(category => category.type === 'INCOME');\n    return [expenseCategories, incomeCategories];\n  };\n  ","import styled from 'styled-components';\n\nexport const StyledDiagram = styled.div`\n    position: relative;\n    display: flex;\n    width: 288px;\n    height: 288px;\n    @media only screen and (min-width: 768px) {\n        width: 336px;\n        height: 336px;\n    }\n    @media only screen and (min-width: 1280px) {\n        width: 288px;\n        height: 288px;\n    }\n`;\nexport const StyledSpan = styled.span`\n    position: absolute;\n    display: flex;\n    top: 50%;\n    left: 50%;\n\n    transform: translate(-50%, -50%);\n`;\n","import React from 'react';\nimport {\n    Chart as ChartJS,\n    ArcElement,\n    Tooltip,\n    Legend,\n    Title,\n} from 'chart.js/auto';\nimport { Doughnut } from 'react-chartjs-2';\nimport { Colors } from 'chart.js';\nimport { selectFinanceTotalBalance } from 'redux/selectors';\nimport { useSelector } from 'react-redux';\nimport { StyledDiagram, StyledSpan } from './StatisticsDiagram.styled';\nimport { colors } from 'services/helpers';\n\nChartJS.register(ArcElement, Tooltip, Legend, Title, Colors);\n\nconst StatisticsDiagram = ({ expenseCategories }) => {\n    const totalBalanceData = useSelector(selectFinanceTotalBalance);\n\n    const data = {\n        labels: [],\n        datasets: [\n            {\n                label: '',\n                backgroundColor: colors,\n                borderColor: colors,\n                data:\n                    !!expenseCategories && !expenseCategories.length\n                        ? [1]\n                        : expenseCategories.map(item => item.total),\n                hoverOffset: 4,\n            },\n        ],\n    };\n\n    const options = {\n        responsive: true,\n        cutout: '70%',\n\n        plugins: {\n            legend: {\n                position: 'top',\n            },\n        },\n    };\n\n    return (\n        <StyledDiagram>\n            <StyledSpan>â‚´ {Number(totalBalanceData).toFixed(2)}</StyledSpan>\n            <Doughnut data={data} options={options}></Doughnut>\n        </StyledDiagram>\n    );\n};\n\nexport default StatisticsDiagram;\n","import styled from 'styled-components';\nimport { SlArrowDown } from 'react-icons/sl';\n\nexport const StyledSelectors = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    .react-select {\n        &__placeholder {\n            color: var(--white) !important;\n        }\n    }\n    @media only screen and (min-width: 768px) {\n        flex-direction: row;\n        gap: 16px;\n        width: 336px;\n    }\n    @media only screen and (min-width: 1280px) {\n        gap: 32px;\n        width: 395px;\n    }\n`;\n\nconst breakpoints = {\n    tablet: `@media only screen and (min-width: 768px)`,\n    desktop: `@media only screen and (min-width: 1280px)`,\n};\n\nexport const selectStyles = {\n    control: styles => ({\n        ...styles,\n        width: '280px',\n        height: '50px',\n        padding: '12px 20px',\n        margin: '0px auto',\n        fontSize: '16px',\n        color: '#FBFBFB',\n        backgroundColor: 'rgba(74, 86, 226, 0.10)',\n        border: '1px solid rgba(255, 255, 255, 0.60)',\n        borderRadius: '8px',\n        cursor: 'pointer',\n        [breakpoints.tablet]: {\n            width: '160px',\n        },\n        [breakpoints.desktop]: {\n            width: '182px',\n        },\n    }),\n    valueContainer: styles => ({ ...styles, padding: '0', margin: '0' }),\n    indicatorSeparator: styles => ({ ...styles, display: 'none' }),\n    dropdownIndicator: (styles, state) => ({\n        ...styles,\n        padding: '0',\n        transition: 'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n        transform: state.selectProps.menuIsOpen ? 'rotate(180deg)' : null,\n    }),\n    singleValue: styles => ({ ...styles, margin: '0', color: '#FBFBFB' }),\n    input: styles => ({ ...styles, padding: '0', margin: '0' }),\n    menu: styles => ({\n        ...styles,\n        top: '90%',\n        width: '280px',\n        height: '157px',\n        borderRadius: '8px',\n        background: `linear-gradient(\n        360deg,\n        rgba(83, 61, 186, 0.7) 0%,\n        rgba(80, 48, 154, 0.7) 35.94%,\n        rgba(106, 70, 165, 0.52) 61.04%,\n        rgba(133, 93, 175, 0.13) 100%\n      )`,\n        backdropFilter: `blur(50px)`,\n        overflow: 'auto',\n        [breakpoints.tablet]: {\n            width: '160px',\n        },\n        [breakpoints.desktop]: {\n            width: '182px',\n        },\n    }),\n    menuList: styles => ({\n        ...styles,\n        width: '280px',\n        height: '157px',\n        [breakpoints.tablet]: {\n            width: '160px',\n        },\n        [breakpoints.desktop]: {\n            width: '182px',\n        },\n        '::-webkit-scrollbar': {\n            width: '7px',\n            height: '0px',\n            borderRadius: '8px',\n        },\n        '::-webkit-scrollbar-track': {\n            backgroundColor: 'rgba(255, 255, 255, 0.10)',\n        },\n        '::-webkit-scrollbar-thumb': {\n            backgroundColor: '#734AEF',\n        },\n        '::-webkit-scrollbar-thumb:hover': {\n            backgroundColor: '#623F8B',\n        },\n    }),\n    option: (styles, state) => ({\n        ...styles,\n        cursor: 'pointer',\n        color: state.isSelected ? '#FF868D' : null,\n        backgroundColor: state.isSelected ? 'rgba(255, 255, 255, 0.10)' : null,\n        ':hover': {\n            color: '#FF868D',\n            backgroundColor: 'rgba(255, 255, 255, 0.10)',\n        },\n    }),\n};\n\nexport const SelectIcon = styled(SlArrowDown)`\n    color: ${({ theme }) => theme.colors.primaryFont};\n    width: 30px;\n    height: 20px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport Select from 'react-select';\nimport { StyledSelectors, selectStyles } from './StatisticsSelect.styled';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFinanceData, selectUserIsAuth } from 'redux/selectors';\n\nimport { getSummaryTransactionThunk } from 'redux/finance/financeThunks';\nimport { optionsMonth } from 'services/helpers';\n\nconst StatisticsSelect = () => {\n    const isAuth = useSelector(selectUserIsAuth);\n    const financeData = useSelector(selectFinanceData);\n\n    const dispatch = useDispatch();\n    const currentYear = new Date().getFullYear();\n    const currentMonth = new Date().getMonth();\n\n    const [month, setMonth] = useState(currentMonth + 1);\n    const [year, setYear] = useState(currentYear);\n\n    useEffect(() => {\n        if (!isAuth) return;\n        dispatch(getSummaryTransactionThunk({ month, year }));\n    }, [dispatch, isAuth, month, year]);\n\n    function getYears(date) {\n        return date.slice(0, 4);\n    }\n\n    function getAllYears() {\n        let years = [];\n        for (const { transactionDate } of financeData) {\n            const year = getYears(transactionDate);\n            if (!years.includes(year)) {\n                years.push(year);\n            }\n        }\n        years.sort();\n        return years.map(y => {\n            return { value: Number(y), label: y };\n        });\n    }\n\n    const optionsYear = getAllYears();\n\n    const getMonth = () => {\n        return month ? optionsMonth.find(month => month.value === month) : '';\n    };\n    const getYear = () => {\n        return year ? optionsYear.find(year => year.value === year) : '';\n    };\n    const onChangeMonth = newData => {\n        setMonth(newData.value);\n    };\n    const onChangeYear = newData => {\n        setYear(newData.value);\n    };\n\n    return (\n        <StyledSelectors>\n            <Select\n                // name=\"month\"\n                styles={selectStyles}\n                value={getMonth()}\n                onChange={onChangeMonth}\n                classNamePrefix=\"react-select\"\n                options={optionsMonth}\n                placeholder={optionsMonth[currentMonth].label}\n            />\n            <Select\n                // name=\"year\"\n                styles={selectStyles}\n                value={getYear()}\n                onChange={onChangeYear}\n                classNamePrefix=\"react-select\"\n                options={optionsYear}\n                placeholder={currentYear}\n            />\n        </StyledSelectors>\n    );\n};\n\nexport default StatisticsSelect;\n","import styled from 'styled-components';\n\nexport const StyledStatisticsTable = styled.div`\n    margin-bottom: 46px;\n\n    .statistics-header {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: space-between;\n        width: 280px;\n        height: 56px;\n        padding: 16px;\n        margin-top: 20px;\n\n        border-radius: 8px;\n        background-color: rgba(82, 59, 126, 0.6);\n        box-shadow: 0px 4px 60px 0px rgba(0, 0, 0, 0.25);\n        backdrop-filter: blur(50px);\n        & p {\n            font-size: 16px;\n            font-style: normal;\n            font-weight: 600;\n            line-height: normal;\n            padding: 16px;\n        }\n    }\n    @media only screen and (min-width: 768px) {\n        .statistics-header {\n            width: 336px;\n        }\n    }\n    @media only screen and (min-width: 1280px) {\n        .statistics-header {\n            width: 395px;\n        }\n    }\n`;\n\nexport const StyledStatisticsList = styled.ul`\n    display: flex;\n    flex-direction: column;\n    & li {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: start;\n        width: 280px;\n        padding: 16px;\n        font-size: 14px;\n        font-style: normal;\n        font-weight: 400;\n        line-height: normal;\n    }\n    .category-color {\n        width: 24px;\n        height: 24px;\n        border-radius: 2px;\n    }\n    .category-sum {\n        margin-left: auto;\n    }\n    .category-item {\n        padding-left: 16px;\n    }\n\n    .gradient {\n        height: 2px;\n        width: 280px;\n        /* Gradient starts from rgba(255, 255, 255, 0.2) at the top to rgba(255, 255, 255, 0.41) at the bottom. */\n        background: linear-gradient(\n            rgba(255, 255, 255, 0.2),\n            rgba(255, 255, 255, 0.41)\n        );\n    }\n    @media only screen and (min-width: 768px) {\n        & li {\n            width: 336px;\n        }\n        .gradient {\n            width: 336px;\n        }\n    }\n    @media only screen and (min-width: 1280px) {\n        & li {\n            width: 395px;\n        }\n        .gradient {\n            width: 395px;\n        }\n    }\n`;\n\nexport const StyledStatisticsTotal = styled.ul`\n    display: flex;\n    flex-direction: column;\n    & li {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: start;\n        width: 280px;\n        padding: 16px 16px 0;\n        font-size: 14px;\n        font-style: normal;\n        font-weight: 400;\n        line-height: normal;\n    }\n    .total-sum-exp {\n        margin-left: auto;\n\n        color: var(--dashboard-text);\n        text-align: right;\n        font-family: Poppins;\n        font-size: 14px;\n        font-style: normal;\n        font-weight: 600;\n        line-height: normal;\n    }\n    .total-sum-inc {\n        margin-left: auto;\n\n        color: var(--yellow);\n        text-align: right;\n        font-family: Poppins;\n        font-size: 14px;\n        font-style: normal;\n        font-weight: 600;\n        line-height: normal;\n    }\n    .total-item {\n        color: var(--white);\n        font-family: Poppins;\n        font-size: 14px;\n        font-style: normal;\n        font-weight: 600;\n        line-height: normal;\n    }\n    @media only screen and (min-width: 768px) {\n        & li {\n            width: 336px;\n        }\n    }\n\n    @media only screen and (min-width: 1280px) {\n        & li {\n            width: 395px;\n        }\n    }\n`;\n","import React from 'react';\nimport {\n    StyledStatisticsList,\n    StyledStatisticsTable,\n    StyledStatisticsTotal,\n} from './StatisticsTable.styled';\nimport { useSelector } from 'react-redux';\nimport { selectExpenseSummary, selectIncomeSummary } from 'redux/selectors';\nimport { colors } from 'services/helpers';\n\nconst StatisticsTable = ({ expenseCategories }) => {\n    const incomeSummary = useSelector(selectIncomeSummary);\n    const expenseSummary = useSelector(selectExpenseSummary);\n\n    return (\n        <StyledStatisticsTable>\n            <div className=\"statistics-header\">\n                <p>Category</p>\n                <p>Sum</p>\n            </div>\n\n            <StyledStatisticsList>\n                {!!expenseCategories &&\n                    expenseCategories.map((category, id) => {\n                        return (\n                            <div key={id}>\n                                <li>\n                                    <div\n                                        style={{ backgroundColor: colors[id] }}\n                                        className=\"category-color\"\n                                    ></div>\n                                    <p className=\"category-item\">\n                                        {category.name}\n                                    </p>\n                                    <p className=\"category-sum\">\n                                        {Number(category.total).toFixed(2) * -1}\n                                    </p>\n                                </li>\n                                <div className=\"gradient\"></div>\n                            </div>\n                        );\n                    })}\n                <StyledStatisticsTotal>\n                    {!!expenseSummary && expenseSummary !== 0 && (\n                        <li>\n                            <p className=\"total-item\">Expenses:</p>\n                            <p className=\"total-sum-exp\">\n                                {Number(expenseSummary).toFixed(2) * -1}\n                            </p>\n                        </li>\n                    )}\n                    {!!incomeSummary && incomeSummary !== 0 && (\n                        <li>\n                            <p className=\"total-item\">Income:</p>\n                            <p className=\"total-sum-inc\">\n                                {Number(incomeSummary).toFixed(2)}\n                            </p>\n                        </li>\n                    )}\n                </StyledStatisticsTotal>\n            </StyledStatisticsList>\n        </StyledStatisticsTable>\n    );\n};\n\nexport default StatisticsTable;\n","import styled from 'styled-components';\n\nexport const StyledStatistics = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    padding: 20px;\n\n    & h2 {\n        font-size: 30px;\n        font-style: normal;\n        font-weight: 400;\n        line-height: normal;\n    }\n    .stat-diag {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        width: 288px;\n        margin: 0 auto;\n    }\n    .stat-cont {\n        display: flex;\n        flex-direction: column;\n        margin: 0 auto;\n    }\n    .stat-table {\n        margin: 32px auto 0;\n    }\n    @media only screen and (min-width: 768px) {\n        & h2 {\n            margin-left: 16px;\n        }\n        .stat-cont {\n            flex-direction: row;\n        }\n        .stat-table {\n            margin: 0 32px;\n        }\n        .stat-diag {\n            width: 336px;\n            position: relative;\n            top: -20px;\n            margin-left: 12px;\n        }\n    }\n    @media only screen and (min-width: 1280px) {\n        padding: 0;\n        padding-top: 97px;\n        padding-left: 69px;\n        .stat-diag {\n            margin-left: 0;\n            width: 288px;\n            /* position: relative; */\n            top: -65px;\n        }\n        .stat-table {\n            margin-right: 0;\n            margin-left: 32px;\n        }\n    }\n`;\n","import StatisticsDiagram from 'components/StatisticsDiagram/StatisticsDiagram';\nimport StatisticsInput from 'components/StatisticsSelect/StatisticsSelect';\nimport StatisticsTable from 'components/StatisticsTable/StatisticsTable';\nimport React from 'react';\nimport { StyledStatistics } from './Statistics.styled';\nimport { useSelector } from 'react-redux';\nimport { useCategoriesType } from 'hooks/categoriesFilter';\nimport { selectSummary } from 'redux/selectors';\n\nconst Statistics = () => {\n    const summary = useSelector(selectSummary);\n    const [expenseCategories] = useCategoriesType(summary);\n    // console.log(expenseCategories);\n    return (\n        <StyledStatistics>\n            <div className=\"stat-cont\">\n                <div className=\"stat-diag\">\n                    <h2>Statistics</h2>\n                    <StatisticsDiagram expenseCategories={expenseCategories} />\n                </div>\n                <div className=\"stat-table\">\n                    <StatisticsInput />\n                    <StatisticsTable expenseCategories={expenseCategories} />\n                </div>\n            </div>\n        </StyledStatistics>\n    );\n};\n\nexport default Statistics;\n","import Statistics from 'components/Statistics/Statistics';\nimport React from 'react';\n\nconst SummaryPage = () => {\n    return (\n        <div>\n            <Statistics />\n        </div>\n    );\n};\n\nexport default SummaryPage;\n"],"names":["useCategoriesType","value","filter","category","type","StyledDiagram","styled","_templateObject","_taggedTemplateLiteral","StyledSpan","_templateObject2","ChartJS","ArcElement","Tooltip","Legend","Title","Colors","_ref","expenseCategories","totalBalanceData","useSelector","selectFinanceTotalBalance","data","labels","datasets","label","backgroundColor","colors","borderColor","length","map","item","total","hoverOffset","_jsxs","children","Number","toFixed","_jsx","Doughnut","options","responsive","cutout","plugins","legend","position","StyledSelectors","breakpoints","selectStyles","control","styles","_objectSpread2","_objectSpread","width","height","padding","margin","fontSize","color","border","borderRadius","cursor","_defineProperty","valueContainer","indicatorSeparator","display","dropdownIndicator","state","transition","transform","selectProps","menuIsOpen","singleValue","input","menu","_objectSpread3","top","background","backdropFilter","overflow","menuList","_objectSpread4","option","isSelected","SlArrowDown","theme","primaryFont","isAuth","selectUserIsAuth","financeData","selectFinanceData","dispatch","useDispatch","currentYear","Date","getFullYear","currentMonth","getMonth","_useState","useState","_useState2","_slicedToArray","month","setMonth","_useState3","_useState4","year","setYear","useEffect","getSummaryTransactionThunk","optionsYear","_step","years","_iterator","_createForOfIteratorHelper","s","n","done","transactionDate","slice","includes","push","err","e","f","sort","y","getAllYears","Select","optionsMonth","onChange","newData","classNamePrefix","placeholder","find","StyledStatisticsTable","StyledStatisticsList","StyledStatisticsTotal","_templateObject3","incomeSummary","selectIncomeSummary","expenseSummary","selectExpenseSummary","className","id","style","name","StyledStatistics","summary","selectSummary","_useCategoriesType","StatisticsDiagram","StatisticsInput","StatisticsTable","Statistics"],"sourceRoot":""}